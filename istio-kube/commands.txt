kubectl apply -f install/kubernetes/istio-demo.yaml

kubectl get svc -n istio-system

kubectl get pods -n istio-system

kubectl label namespace default istio-injection=enabled

kubectl apply -f kube_all_svc.yml

kubectl get gateway



### Setup Gateway ###

kubectl get svc istio-ingressgateway -n istio-system


kubectl exec -it $(kubectl get pod -l app=backend-svc -o jsonpath='{.items[0].metadata.name}') -c backend-svc -- curl backend-svc:9080/status | grep -o "ok"


### Cleanup ###

kubectl delete -f kube_all_svc.yml
kubectl delete -f kube_ingress.yml



### INGRESS ###


kubectl apply -f - <<EOF
apiVersion: networking.istio.io/v1alpha3
kind: Gateway
metadata:
  name: httpbin-gateway
spec:
  selector:
    istio: ingressgateway # use Istio default gateway implementation
  servers:
  - port:
      number: 80
      name: http
      protocol: HTTP
    hosts:
    - "*"
---
apiVersion: networking.istio.io/v1alpha3
kind: VirtualService
metadata:
  name: httpbin
spec:
  hosts:
  - "*"
  gateways:
  - httpbin-gateway
  http:
  - match:
    - uri:
        prefix: /headers
    route:
    - destination:
        port:
          number: 8000
        host: httpbin
EOF
